---
- hosts: "env_{{ lifecycle_stage }}"
  become: yes
  vars:
    check_only: yes
    mountname: "/"

  tasks:
  - name: check operating system
    assert:
      that: "ansible_os_family == 'RedHat'"
      
  - name: Ensure that free space on {{ mountname }} is grater than 20%
    assert:
      that: mount.size_available > mount.size_total|float * 0.2
      msg: disk space has reached 80% threshold
    vars:
      mount: "{{ ansible_mounts | selectattr('mount','equalto',mountname) | list | first }}"
      
  - name: check for updates
    yum:
      name: '*'
      state: latest
      exclude: kernel*
    check_mode: "{{ check_only }}"
    throttle: 1
    register: updates

  - name: output updates dictionary
    debug:
      msg: "{{ updates }}"
      
#  - name: Sending an email using Ansible
#    mail:
#      host: smtp.gmail.com
#      port: 587
#      username: dmeonavneet@gmail.com
#      password: "Kalu@134"
#      to: demonavneet@gmail.com
#      subject: Email By Ansible - about patch 
#      body: Patch Successfuly completed check Satellite server for more details 
#      delegate_to: localhost          
    
  - name: updated package list
    debug:
      msg: "{% if item[0] in packages %}{{ packages[item[0]][0].version }}-{{ packages[item[0]][0].release }}.{{ packages[item[0]][0].arch }} >>> {{ item[1] }} {% else %} {{ item[1] }}{% endif %}"
    loop: "{{ updates.changes.updated }}"
    loop_control:
      label: "{{ item[0] }}"
    when: updates.changes is defined
